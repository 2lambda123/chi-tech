namespace CHI_LUA 
 {
int chiThermoSetComponentProperty(Handle sysHndle, Handle compHndle, Property propCode);
int chiThermoCreateVolumeFromCoordinates(int systemHandle, Table point1, Table point2);
int chiThermoCreateSystem();
int chiThermoConnectTwoComponents(Handle systemHandle, Component leftComponent, Single sjunc, Component rigtComponent, 0=end-begin, mode);
int chiThermoInitialize(int systemHandle);
int chiThermoCreateBC(int systemHandle);
int chiThermoGetComponentProperty(Handle sysHndle, Handle compHndle, Property propCode);
int chiThermoCreateSJunction(Handle systemHandle);
int chiCreateProductQuadrature(int QuadratureType, int Np, int Na);
int chiCreateQuadrature(int QuadratureType, int NumberOfPoints);
int chiLegendre(int N, double x);
int chiLegendreDerivative(int N, double x);
int chiYlm(ell \param, m \param, theta \param, varphi \param);
int chiEdgeLoopSplitByAngle(int LoopCollectionHandle, int LoopHandle, double Angle);
int chiSurfaceMeshExportToObj(int SurfaceHandle, char* FileName);
int chiSurfaceMeshExportPolyFile(int SurfaceHandle, char* FileName);
int chiSurfaceMeshCreate();
int chiSurfaceMeshImportFromOBJFile(int SurfaceHandle, char* FileName, bool polyflag);
int chiSurfaceMeshImportFromTriangleFiles(int SurfaceHandle, char* FileName, bool polyflag);
int chiSurfaceMeshExtractOpenEdgesToObj(int SurfaceHandle, char FileName);
int chiSurfaceMeshCheckCycles(int SurfaceHandle, int NumAngles);
int chiSurfaceMeshSplitByPatch(int SurfaceHandle);
int chiSurfaceMeshGetEdgeLoops(int SurfaceHandle);
int chiSurfaceMeshGetEdgeLoopsPoly(int SurfaceHandle);
int chiLogicalVolumeCreate(int TypeIndex, varying Values);
int chiRegionCreate();
int chiRegionGetBoundarySurfaceMesh(int RegionHandle, int BoundaryNumber, int ContinuumNumber);
int chiRegionExportMeshToPython(int RegionHandle, char FileName, bool ExportTemplate);
int chiRegionExportMeshToObj(int RegionHandle, char FileName, bool ExportByMaterial);
int chiRegionExportMeshToVTK(int RegionHandle, char FileName);
int chiRegionAddSurfaceBoundary(int RegionHandle, int SurfaceHandle);
int chiRegionAddLineBoundary(int RegionHandle, int LineMeshHandle);
int chiMeshHandlerCreate();
int chiMeshHandlerSetCurrent(int HandlerHandler);
int chiMeshHandlerGetSurfaceFromCollection(int CollectionHandle, int SurfaceIndex);
int chiLineMeshCreateFromArray(LuaTable Table);
int chiLineMeshCreateFromLoop(int LoopCollectionHandle, int LoopHandle);
int chiSurfaceMesherExportToObj();
int chiSurfaceMesherSetProperty(int PropertyNumber, varying PropertyValue);
int chiSurfaceMesherExecute(bool ExportLoadBalance);
int chiSurfaceMesherCreate(int Type);
int chiVolumeMesherCreate(int Type);
int chiVolumeMesherExecute();
int chiVolumeMesherSetProperty(int PropertyIndex, varying PropertyValue);
int chiFFInterpolationInitialize(int FFIHandle);
int chiFFInterpolationExecute(int FFIHandle);
int chiFFInterpolationGetValue(int FFIHandle);
int chiFFInterpolationCreate(int FFITypeIndex);
int chiFFInterpolationSetProperty(int FFIHandle, int PropertyIndex);
int chiFFInterpolationExportPython(int FFIHandle, char BaseName);
int chiMPIReceiveCellsets();
int chiMPIBroadcastCellsets();
int chiMPIBarrier();
int chiLogSetVerbosity(int int_level);
int chiLog(int LogType);
int chiPhysicsAddMaterial(char Name);
int chiSolverExecute();
int chiPhysicsMaterialAddProperty(int MaterialHandle, int PropertyIndex);
int chiPhysicsMaterialSetProperty(int MaterialHandle, int PropertyIndex, int OperationIndex, varying Information);
int chiSolverAddRegion(int SolverHandle, int RegionHandle);
int chiMonteCarlonCreateSolver();
int chiMonteCarlonCreateSource(int SolverHandle, int SourceType);
int chiMonteCarlonInitialize(int SolverHandle);
int chiMonteCarlonSetProperty(int SolverHandle, int PropertyIndex);
int chiMonteCarlonExecute(int SolverHandle);
int chiDiffusionSetProperty(int SolverHandle, int PropertyIndex, varying Values);
int chiDiffusionCreateSolver();
int chiDiffusionInitialize(int SolverHandle);
int chiDiffusionExecute(int SolverHandle, int SolverHandle);
int chiLBSSetProperty(int SolverIndex, int PropertyIndex);
int chiLBSCreateGroupset(int SolverIndex);
int chiLBSCreateGroup(int SolverIndex);
int chiLBSGroupsetAddGroups(int SolverIndex, int GroupsetIndex, int FromIndex, int ToIndex);
int chiLBSGroupsetSetQuadrature(int SolverIndex, int GroupsetIndex, int QuadratureIndex);
int chiLBSGroupsetSetAngleAggDiv(int SolverIndex, int GroupsetIndex, int NumDiv);
int chiLBSGroupsetSetGroupSubsets(int SolverIndex, int GroupsetIndex, int NumDiv);
int chiLBSGroupsetSetIterativeMethod(int SolverIndex, int GroupsetIndex, int IterativeMethod);
int chiLBSGroupsetSetResidualTolerance(int SolverIndex, int GroupsetIndex, float ResidualTol);
int chiLBSGroupsetSetMaxIterations(int SolverIndex, int GroupsetIndex, int Numiter);
int chiLBSGroupsetSetGMRESRestartIntvl(int SolverIndex, int GroupsetIndex, int Intvl);
int chiLBSGroupsetSetWGDSA(int SolverIndex, int GroupsetIndex, int MaxIters, float ResTol, bool Verbose, char PETSCString);
int chiLBSGroupsetSetTGDSA(int SolverIndex, int GroupsetIndex, int MaxIters, float ResTol, bool Verbose, char PETSCString);
int chiLBSInitialize(int SolverIndex);
int chiLBSGetFieldFunctionList(int SolverIndex);
int chiLBSGetScalarFieldFunctionList(int SolverIndex);
int chiLBSransportCreateSolver();
int chiLBSExecute(int SolverIndex);
}
